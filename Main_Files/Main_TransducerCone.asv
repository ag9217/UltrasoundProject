%% Combining transducer and cone

% Defining the kgrid

% PML
PML_X_SIZE = 20;            % [grid points]
PML_Y_SIZE = 10;            % [grid points]
PML_Z_SIZE = 10;            % [grid points]

% Absolute grid values
Nx = 128;    % [grid points]
Ny = 128;    % [grid points]
Nz = 64;     % [grid points]

% Defining size of each element in the kgrid
dx = 2e-3; 
dy = 2e-3;
dz = 2e-3;

% create the k-space grid
kgrid = kWaveGrid(Nx, dx, Ny, dy, Nz, dz);

% Cone dimensions
R = 220; % Outer diameter [mm]
t = 50; % Thickness of the cone [mm] - check with Solidworks

% Calculating total length of the kgrid in mm
total_length_X = Nx*dx*1000; % [mm]
total_length_Y = Ny*dy*1000; % [mm]
total_length_Z = Nz*dz*1000; % [mm]

% Size of the grid that cone is occupying
%difference = total_length_X - R;
cone_gridPoints_X = R/(dx*1000);
cone_gridPoints_Y = R/(dy*1000);
cone_gridPoints_Z = t/(dz*1000);

% Importing the cone
[OUTPUTgrid] = VOXELISE(cone_gridPoints_Z,cone_gridPoints_X,cone_gridPoints_Y,'Cone_model.stl','xyz');



% % Using function resize to change the resolution
% [Try] = cast(VOXELISE(64,128,128,'Cone_model.stl','xyz'),'single');
% mat_rs = resize(Try, [32 64 64]);
% 
% % Using the function VOXELISE but with lower resolution values for input
% [Low_res] = cast(VOXELISE(32,64,64,'Cone_model.stl','xyz'),'single');
% 
% % Initialize new 3D array that will join information from two different
% % resizing methods
% combined = cast(zeros(32, 64, 64), 'single');


% for X = 1:length(mat_rs(:,1,1))
%     for Y = 1:length(mat_rs(1,:,1))
%         for Z = 1:length(mat_rs(1,1,:))
%             if mat_rs(X,Y,Z) > 0 || Low_res(X,Y,Z) == 1
%                 combined(X,Y,Z) = 1;
%             end
%             if mat_rs(X,Y,Z) > 0
%                 mat_rs(X,Y,Z) = 1;
%             end
%             
%         end
%     end
% end


